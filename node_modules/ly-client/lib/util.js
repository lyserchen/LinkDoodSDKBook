'use strict';

var state = require('./state');
var spawnSync = require('child_process').spawnSync;
var sync_request = require('sync-request');

var util = {
    split_trim: function (in_string, separator) {
        /* Split a string and trim it.
           By default use spaces to trim if no separator is given.
           Takes care of not leaving empty items due to multiple spaces in the input.
           */
        var sep = ' ';
        if (separator) {
            sep = separator;
        }
        var list = in_string.split(sep);
        var item = '';
        var result = [];
        for (var i = 0; i < list.length; i++) {
            item = list[i].trim();
            if (item) {
                result.push(item);
            };
        };
        return result;
    },
    server: {
        url: function() {
            var pt = state.server.port ? ":" + state.server.port : "";
            return state.server.protocol + state.server.hostname + pt;
        },
        running: function() {
            if (!state.methods) {
                state.methods = {};
            }
            try {
                var res = sync_request('POST', util.server.url());
                state.methods.server_running = true;
                return true;
            }
            catch (e){
                if (e.message.indexOf("ECONNREFUSED") > -1) {
                    state.methods.server_running = false;
                    return false;
                }
                else {
                    throw e;
                }
            };
        }
    },
    start_server: function() {
        // Try to start the server at the given port
        console.log("TODO: implement util.start_server")
        return false;
    }
}

module.exports = util;
