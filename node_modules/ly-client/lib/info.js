'use strict';

var spawnSync = require('child_process').spawnSync;

var util = require('./util');
var state = require('./state');

var get_methods = function() {
    // determine whether ly and ly-server are available,
    // retrieve ly version as a side-effect
    state.methods = {};
    var run_cl = spawnSync("ly", ["-v"]);
    if (run_cl.error) {
        state.methods.cli_available = false;
    }
    else {
        state.methods.cli_available = true;
        state.ly_version = run_cl.stdout.toString().trim();
    };
    run_cl = spawnSync("ly-server", ["-v"]);
    if (run_cl.error) {
        state.methods.server_available = false;
    }
    else {
        state.methods.server_available = true;
    };
    util.server.running();

};

var info = {
    methods: function() {
        /* Determine whether the `ly` script and `ly-server` are
           available. When called for the first time this is checked
           through actually invoking them. At the same time the python-ly
           version is determined.
           */
        if (state.methods == null) {
            get_methods();
        }
        return {
            cli: state.methods.cli_available,
            server: state.methods.server_available,
            server_running: state.methods.server_running
        };
    },

    version: function() {
        // Returns the python-ly version
        if (state.ly_version == null) {
            get_methods();
        }
        return state.ly_version;
    }
}

module.exports = info;
